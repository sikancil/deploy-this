# Environment variables for the DeployThis (dt) CLI stage environment.
# This file is used by the validateEnvironment function in src/utils/environment.validator.ts
# to validate the environment variables required for deployment.
# It is copied to .env.dt.stage during the initialization process.

#============================================
# Deployment Type
# NOTE: Specifies the type of deployment.
# - "single" indicates a single-instance deployment.
# - "asg" indicates an auto-scaling group deployment.
#============================================
DEPLOYMENT_TYPE="single"



#============================================
# AWS credentials for accessing AWS services.
# Used by various AWS SDK calls throughout the application.
#============================================
# NOTE: Specifies the AWS profile to use for authentication.
# This profile is configured in the user's AWS credentials file (~/.aws/credentials).
AWS_PROFILE="example-stage-profile"

# NOTE: Specifies the AWS region where the infrastructure will be deployed.
AWS_REGION="us-east-2"

# Credentials
# -------------------------------------------
# NOTE: AWS access key ID for authentication.
AWS_ACCESS_KEY="AK3X4MPL3ACC3SS3SK3Y"

# NOTE: AWS secret access key for authentication.
AWS_SECRET_KEY="S3CR3T_ExampleKey_use_AWS-CLI-or-Console"

# Main Resources
# -------------------------------------------
# NOTE: The ID of the Virtual Private Cloud (VPC) to use for deployment.  This VPC must already exist.
VPC_ID="vpc-00000000000000000"

# NOTE: The ID of the internet gateway (IGW) to use for internet connectivity. This IGW must already exist.
IGW_ID="igw-00000000000000000"



#============================================
# EC2 INSTANCE
# The Amazon Machine Image (AMI) ID to use for EC2 instances.
#============================================
# This AMI should be a suitable base image for the application. (Ubuntu 22.04 LTS x64)
AMI_ID="ami-0430580de6244e02e"

# NOTE: A list of EC2 instance types that can be used by the Auto Scaling Group. For single-instance deployments, only the first element is used.
ASG_INSTANCE_TYPES=["t2.micro", "t2.small", "t2.medium"]



#============================================
# AUTO SCALING GROUP
#============================================
# NOTE: The desired number of EC2 instances in the Auto Scaling Group.
ASG_DESIRED_CAPACITY=1

# NOTE: The minimum number of EC2 instances in the Auto Scaling Group.
ASG_MIN_SIZE=1

# NOTE: The maximum number of EC2 instances in the Auto Scaling Group.
ASG_MAX_SIZE=1

# NOTE: The target CPU utilization for the Auto Scaling Group.  The group will scale up or down based on this target.
ASG_CPU_TARGET=97

# NOTE: The cooldown period (in seconds) for scaling in (reducing the number of instances).
ASG_SCALE_IN_COOLDOWN=300

# NOTE: The cooldown period (in seconds) for scaling out (increasing the number of instances).
ASG_SCALE_OUT_COOLDOWN=300



#============================================
# LOAD BALANCER
#============================================
# NOTE: The ARN (Amazon Resource Name) of the SSL certificate to use for HTTPS traffic on the load balancer.
SSL_CERTIFICATE_ARN="arn:aws:acm:us-east-2:AwsAccountId:certificate/4cc3ss1d-U53R-GU1D-C3RT-1d3ntity2arn"

# Expose Hosts Ports
# -------------------------------------------
# NOTE: The port to expose for HTTP traffic on the load balancer.
EXPOSE_HTTP="0.0.0.0:80"

# NOTE: The port to expose for HTTPS traffic on the load balancer.
EXPOSE_HTTPS="0.0.0.0:443"

# NOTE: The port to expose for SSH traffic on the load balancer.  This allows SSH access to the instances.
EXPOSE_SSH="10.1.1.1/24:22"

# LB Health Check
# -------------------------------------------
# NOTE: The path to use for health checks on the load balancer.
ASG_HEALTH_CHECK_PATH="/"

# NOTE: The interval (in seconds) between health checks on the load balancer.
ASG_HEALTH_CHECK_INTERVAL=300

# NOTE: The timeout (in seconds) for health checks on the load balancer.
ASG_HEALTH_CHECK_TIMEOUT=15

# NOTE: The number of consecutive successful health checks required to consider an instance healthy.
ASG_HEALTH_CHECK_HEALTHY_THRESHOLD=3

# NOTE: The number of consecutive failed health checks required to consider an instance unhealthy.
ASG_HEALTH_CHECK_UNHEALTHY_THRESHOLD=10

# NOTE: The HTTP status codes that indicate a healthy response from the health check.
ASG_HEALTH_CHECK_MATCHER="200,302,301"



#============================================
# Repository
#============================================
# Bitbucket credentials for accessing Bitbucket repositories. Used for CI/CD integration.
# NOTE: Bitbucket App Password (API key) for authentication.
BITBUCKET_APP_PASSWORD="example-app-password"

# NOTE: The slug of the Bitbucket repository.
BITBUCKET_REPO_SLUG="example-repo-slug"

# NOTE: The name of the Bitbucket workspace containing the repository.
BITBUCKET_WORKSPACE="example-workspace"

BITBUCKET_BRANCH="codebase"



#============================================
# Docker Registry Repository
# ECR repository name for storing Docker images. Used by CI/CD process to push images.
#============================================
# NOTE: The name of the Elastic Container Registry (ECR) repository where Docker images will be stored.
ECR_REPOSITORY_NAME="example-repo"



// TODO: Add more environment variables as needed.
