# Environment variables for the DeployThis (dt) CLI stage environment.
# This file is used by the validateEnvironment function in src/utils/environment.validator.ts
# to validate the environment variables required for deployment.
# It is copied to .env.dt.stage during the initialization process.


#============================================
# Deployment Type
#============================================
# NOTE: Specifies the type of deployment.
# - "single" indicates a single-instance deployment.
# - "asg" indicates an auto-scaling group deployment.
#============================================
DEPLOYMENT_TYPE="single"


#============================================
# AWS Configuration
#============================================
# NOTE: AWS account configuration
AWS_PROFILE="example-stage-profile"
AWS_REGION="us-east-2"
AWS_ACCOUNT_ID="123456789012"

# NOTE: AWS credentials
AWS_ACCESS_KEY="AK3X4MPL3ACC3SS3SK3Y"
AWS_SECRET_KEY="S3CR3T_ExampleKey_use_AWS-CLI-or-Console"


#============================================
# Network Configuration
#============================================
# NOTE: VPC configuration
VPC_ID="vpc-00000000000000000"
VPC_CIDR="10.0.0.0/16"
IGW_ID="igw-00000000000000000"

# NOTE: Subnet configuration
PUBLIC_SUBNET_CIDRS='["10.0.1.0/24", "10.0.2.0/24"]'
AVAILABILITY_ZONES='["us-east-2a", "us-east-2b"]'
MAP_PUBLIC_IP="true"


#============================================
# EC2 Configuration
#============================================
# NOTE: EC2 instance configuration
# Ubuntu 24.04 LTS (HVM), SSD Volume Type
# us-east-2: ami-0ea3c35c5c3284d82  created 2024-09-30T12:23:14.000Z
# us-west-1: ami-0da424eb883458071  created 2024-09-30T12:22:45.000Z
AMI_ID="ami-0ea3c35c5c3284d82"
INSTANCE_TYPES='["t2.micro", "t2.small", "t2.medium"]'

# NOTE: Volume configuration
ROOT_VOLUME_TYPE="gp3"
ROOT_VOLUME_SIZE="30"
ROOT_VOLUME_ENCRYPTED="true"

# NOTE: Application configuration
APP_PORT="3000"


#============================================
# Auto Scaling Configuration
#============================================
# NOTE: ASG capacity settings
ASG_DESIRED_CAPACITY="1"
ASG_MIN_SIZE="1"
ASG_MAX_SIZE="2"
BASE_CAPACITY="1"

# NOTE: ASG scaling targets
ASG_CPU_TARGET="90"
ASG_RAM_TARGET="97"

# NOTE: Health check configuration
HEALTH_CHECK_PATH="/"
HEALTH_CHECK_INTERVAL="300"
HEALTH_CHECK_TIMEOUT="15"
HEALTH_CHECK_HEALTHY_THRESHOLD="3"
HEALTH_CHECK_UNHEALTHY_THRESHOLD="10"
HEALTH_CHECK_MATCHER="200,302,301"


#============================================
# Load Balancer Configuration
#============================================
# NOTE: SSL configuration
SSL_CERTIFICATE_ARN="arn:aws:acm:us-east-2:${AWS_ACCOUNT_ID}:certificate/4cc3ss1d-U53R-GU1D-C3RT-1d3ntity2arn"

# NOTE: Exposed ports configuration
EXPOSE_HTTP="0.0.0.0:80"
EXPOSE_HTTPS="0.0.0.0:443"
EXPOSE_SSH="10.1.1.1/24:22"


#============================================
# Repository Configuration
#============================================
# NOTE: Bitbucket configuration
BITBUCKET_USERNAME="example_app_user_id"
BITBUCKET_APP_PASSWORD="example_app_password_123"
BITBUCKET_WORKSPACE="example-workspace"
BITBUCKET_REPO_SLUG="example-repo-slug"
BITBUCKET_BRANCH="main"


#============================================
# Docker Registry Configuration
#============================================
# NOTE: ECR configuration
ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
ECR_REPOSITORY_NAME="${PROJECT_NAME}"
ECS_EXECUTION_ROLE_ARN=${ECS_EXECUTION_ROLE_ARN}


#============================================
# Tags Configuration
#============================================
# NOTE: Resource tagging
COMMON_TAGS='{"Environment": "${NODE_ENV}", "Project": "${PROJECT_NAME}", "DeploymentType": "${DEPLOYMENT_TYPE}", "DeployEngine": "DeployThis"}'
